// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/04/2021 00:04:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          despertador
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module despertador_vlg_vec_tst();
// constants                                           
// general purpose registers
reg ajuste;
reg clk;
reg troca_modo;
reg trocar;
reg up;
// wires                                               
wire [3:0] acorda_hd;
wire [3:0] acorda_hu;
wire [3:0] acorda_md;
wire [3:0] acorda_mu;
wire [3:0] AnodeOutput;
wire [3:0] digito_selecionado;
wire [3:0] horas_dezenas;
wire [3:0] horas_unidades;
wire [3:0] min_dezenas;
wire [3:0] min_unidades;
wire [3:0] sec_dezenas;
wire [3:0] sec_unidades;
wire [6:0] Seg7Output;
wire tc_horas;
wire tc_minutos;
wire tc_segundos;

// assign statements (if any)                          
despertador i1 (
// port map - connection between master ports and signals/registers   
	.acorda_hd(acorda_hd),
	.acorda_hu(acorda_hu),
	.acorda_md(acorda_md),
	.acorda_mu(acorda_mu),
	.ajuste(ajuste),
	.AnodeOutput(AnodeOutput),
	.clk(clk),
	.digito_selecionado(digito_selecionado),
	.horas_dezenas(horas_dezenas),
	.horas_unidades(horas_unidades),
	.min_dezenas(min_dezenas),
	.min_unidades(min_unidades),
	.sec_dezenas(sec_dezenas),
	.sec_unidades(sec_unidades),
	.Seg7Output(Seg7Output),
	.tc_horas(tc_horas),
	.tc_minutos(tc_minutos),
	.tc_segundos(tc_segundos),
	.troca_modo(troca_modo),
	.trocar(trocar),
	.up(up)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #500 1'b1;
	#500;
end 

// ajuste
initial
begin
	repeat(3)
	begin
		ajuste = 1'b0;
		ajuste = #180000 1'b1;
		# 120000;
	end
	ajuste = 1'b0;
end 

// up
always
begin
	up = 1'b0;
	up = #4000 1'b1;
	#4000;
end 

// trocar
always
begin
	trocar = 1'b0;
	trocar = #20000 1'b1;
	#20000;
end 

// troca_modo
initial
begin
	troca_modo = 1'b1;
	troca_modo = #5000 1'b0;
	troca_modo = #490000 1'b1;
	troca_modo = #10000 1'b0;
	troca_modo = #490000 1'b1;
end 
endmodule

